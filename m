Return-Path: <linux-sh-owner@vger.kernel.org>
X-Original-To: lists+linux-sh@lfdr.de
Delivered-To: lists+linux-sh@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id A68EE20C2C7
	for <lists+linux-sh@lfdr.de>; Sat, 27 Jun 2020 17:26:10 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1726012AbgF0P0J (ORCPT <rfc822;lists+linux-sh@lfdr.de>);
        Sat, 27 Jun 2020 11:26:09 -0400
Received: from mail01.asahi-net.or.jp ([202.224.55.13]:59975 "EHLO
        mail01.asahi-net.or.jp" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S1725864AbgF0P0J (ORCPT
        <rfc822;linux-sh@vger.kernel.org>); Sat, 27 Jun 2020 11:26:09 -0400
Received: from sakura.ysato.name (ik1-413-38519.vs.sakura.ne.jp [153.127.30.23])
        (Authenticated sender: PQ4Y-STU)
        by mail01.asahi-net.or.jp (Postfix) with ESMTPA id 40DE710BA3A;
        Sun, 28 Jun 2020 00:26:05 +0900 (JST)
Received: from yo-satoh-debian.ysato.ml (ZM005235.ppp.dion.ne.jp [222.8.5.235])
        by sakura.ysato.name (Postfix) with ESMTPSA id 391051C079E;
        Sun, 28 Jun 2020 00:26:05 +0900 (JST)
Date:   Sun, 28 Jun 2020 00:26:01 +0900
Message-ID: <87bll4a5ti.wl-ysato@users.sourceforge.jp>
From:   Yoshinori Sato <ysato@users.sourceforge.jp>
To:     John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
Cc:     linux-sh@vger.kernel.org, Rich Felker <dalias@libc.org>,
        Geert Uytterhoeven <geert@linux-m68k.org>,
        Michael Karcher <kernel@mkarcher.dialup.fu-berlin.de>,
        NIIBE Yutaka <gniibe@fsij.org>, linux-kernel@vger.kernel.org
Subject: Re: [PATCH] sh: Implement __get_user_u64() required for 64-bit get_user()
In-Reply-To: <20200611075811.2949870-2-glaubitz@physik.fu-berlin.de>
References: <20200611075811.2949870-1-glaubitz@physik.fu-berlin.de>
        <20200611075811.2949870-2-glaubitz@physik.fu-berlin.de>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM/1.14.9 (=?ISO-8859-4?Q?Goj=F2?=) APEL/10.8 EasyPG/1.0.0 Emacs/26
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
Sender: linux-sh-owner@vger.kernel.org
Precedence: bulk
List-ID: <linux-sh.vger.kernel.org>
X-Mailing-List: linux-sh@vger.kernel.org

On Thu, 11 Jun 2020 16:58:11 +0900,
John Paul Adrian Glaubitz wrote:
> 
> Trying to build the kernel with CONFIG_INFINIBAND_USER_ACCESS enabled fails
> 
>      ERROR: "__get_user_unknown" [drivers/infiniband/core/ib_uverbs.ko] undefined!
> 
> with on SH since the kernel misses a 64-bit implementation of get_user().
> 
> Implement the missing 64-bit get_user() as __get_user_u64(), matching the
> already existing __put_user_u64() which implements the 64-bit put_user().
> 
> Signed-off-by: John Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>
> ---
>  arch/sh/include/asm/uaccess_32.h | 53 ++++++++++++++++++++++++++++++++
>  1 file changed, 53 insertions(+)
> 
> diff --git a/arch/sh/include/asm/uaccess_32.h b/arch/sh/include/asm/uaccess_32.h
> index 624cf55acc27..5d7ddc092afd 100644
> --- a/arch/sh/include/asm/uaccess_32.h
> +++ b/arch/sh/include/asm/uaccess_32.h
> @@ -26,6 +26,9 @@ do {								\
>  	case 4:							\
>  		__get_user_asm(x, ptr, retval, "l");		\
>  		break;						\
> +	case 8:							\
> +		__get_user_u64(x, ptr, retval);			\
> +		break;						\
>  	default:						\
>  		__get_user_unknown();				\
>  		break;						\
> @@ -66,6 +69,56 @@ do {							\
>  
>  extern void __get_user_unknown(void);
>  
> +#if defined(CONFIG_CPU_LITTLE_ENDIAN)
> +#define __get_user_u64(x, addr, err) \
> +({ \
> +__asm__ __volatile__( \
> +	"1:\n\t" \
> +	"mov.l	%2,%R1\n\t" \
> +	"mov.l	%T2,%S1\n\t" \
> +	"2:\n" \
> +	".section	.fixup,\"ax\"\n" \
> +	"3:\n\t" \
> +	"mov  #0,%R1\n\t"   \
> +	"mov  #0,%S1\n\t"   \
> +	"mov.l	4f, %0\n\t" \
> +	"jmp	@%0\n\t" \
> +	" mov	%3, %0\n\t" \
> +	".balign	4\n" \
> +	"4:	.long	2b\n\t" \
> +	".previous\n" \
> +	".section	__ex_table,\"a\"\n\t" \
> +	".long	1b, 3b\n\t" \
> +	".long	1b + 2, 3b\n\t" \
> +	".previous" \
> +	:"=&r" (err), "=&r" (x) \
> +	:"m" (__m(addr)), "i" (-EFAULT), "0" (err)); })
> +#else
> +#define __get_user_u64(x, addr, err) \
> +({ \
> +__asm__ __volatile__( \
> +	"1:\n\t" \
> +	"mov.l	%2,%S1\n\t" \
> +	"mov.l	%T2,%R1\n\t" \
> +	"2:\n" \
> +	".section	.fixup,\"ax\"\n" \
> +	"3:\n\t" \
> +	"mov  #0,%S1\n\t"   \
> +	"mov  #0,%R1\n\t"   \
> +	"mov.l	4f, %0\n\t" \
> +	"jmp	@%0\n\t" \
> +	" mov	%3, %0\n\t" \
> +	".balign	4\n" \
> +	"4:	.long	2b\n\t" \
> +	".previous\n" \
> +	".section	__ex_table,\"a\"\n\t" \
> +	".long	1b, 3b\n\t" \
> +	".long	1b + 2, 3b\n\t" \
> +	".previous" \
> +	:"=&r" (err), "=&r" (x) \
> +	:"m" (__m(addr)), "i" (-EFAULT), "0" (err)); })
> +#endif
> +
>  #define __put_user_size(x,ptr,size,retval)		\
>  do {							\
>  	retval = 0;					\
> -- 
> 2.27.0
> 

Acked-by: Yoshinori Sato <ysato@users.sourceforge.jp>

-- 
Yosinori Sato
