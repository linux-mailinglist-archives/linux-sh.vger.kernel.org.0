Return-Path: <linux-sh-owner@vger.kernel.org>
X-Original-To: lists+linux-sh@lfdr.de
Delivered-To: lists+linux-sh@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 19DB93077F6
	for <lists+linux-sh@lfdr.de>; Thu, 28 Jan 2021 15:26:47 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231362AbhA1OY6 (ORCPT <rfc822;lists+linux-sh@lfdr.de>);
        Thu, 28 Jan 2021 09:24:58 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:41752 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S231801AbhA1OYO (ORCPT
        <rfc822;linux-sh@vger.kernel.org>); Thu, 28 Jan 2021 09:24:14 -0500
Received: from mail-ed1-x52e.google.com (mail-ed1-x52e.google.com [IPv6:2a00:1450:4864:20::52e])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 67765C061756
        for <linux-sh@vger.kernel.org>; Thu, 28 Jan 2021 06:23:32 -0800 (PST)
Received: by mail-ed1-x52e.google.com with SMTP id b21so6804923edy.6
        for <linux-sh@vger.kernel.org>; Thu, 28 Jan 2021 06:23:32 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=linaro.org; s=google;
        h=mime-version:from:date:message-id:subject:to:cc;
        bh=DJigmILD7XbegWXgHiQFmv3U2jUhmT+Q47bKnL6G5Tk=;
        b=jmoA5vu2wgOvGyThkq5prKINS6glH8lyuUmVlj7vILKJ5wiizuc7xWpXFAuQy9DEuj
         Vpzdvfl2M7N/TtH7LV+Hg8mWi1miy9arxmGIaMMNvx6rqWU1x7VgFLQ3Qi0+pCksadQv
         kJY2HJLAi7oioQck7HNpdNU2T+rm0IFbZyzqo/zkXgsSItFcCKkzC4vSXjjL5imsw2um
         4kbOWLEBc4JOovfzUDokkD2qJztd6HXjMVlIHnT4jwJmQDA1yQ/qBrZT6Ks/lWa9ei/s
         LfRgDFnv3a1okNbltDzbklpj3rEtSoRyQsVDEVm1USeS+W8GR3RVMBfXVTQ7yyYQ5ADn
         fEqg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:from:date:message-id:subject:to:cc;
        bh=DJigmILD7XbegWXgHiQFmv3U2jUhmT+Q47bKnL6G5Tk=;
        b=NfAvZBqXmvvqgFq/AWZ0MnlQfTqkBsLRFR3vTpLTnE5xvotO7V/f9TVbxHpCImcudw
         i0b3d5hGculMCHPQ6hLT0qLOeBH0ve6okWAwEiAX+3IVUdwqiAm4hLpJYc+/AwXUXhga
         qyZV615oOjkR5qufBiR2PVmp7zSbCGPRoLn7Z1ypuf6xUYbcmkJsSN+wWllqqKAhLmFf
         3mTELadppGoKPsPv18J2xZxI+9nsaxqI7zad52p9euP3Zwms2ZHerGc0+jkSfTBLh+3W
         55GOEQEEmRs0ZVSEEhNfI9+lE02MmTNQ7CYtW/HqgF4pnL+g50Qd9PJm9TqO+TvIIRL0
         IOkA==
X-Gm-Message-State: AOAM531HuuTILeqImZFHUnaDDgiNUudMeMvyHtKsTqL0AlI7TbKEnGY0
        UMnD/HFhc1ShvKZprlg+50ekoBGf34Bb2m0eK9eXRg==
X-Google-Smtp-Source: ABdhPJy4tEuZEKHzTfl/J+8Xtl7eEbD7AqFjWQXPp/NS1ZLJJHFldpK4p/ddlkjHxz1pP2aBmp3RWpdkFMiHeV0jxQU=
X-Received: by 2002:aa7:c244:: with SMTP id y4mr14134976edo.239.1611843810816;
 Thu, 28 Jan 2021 06:23:30 -0800 (PST)
MIME-Version: 1.0
From:   Naresh Kamboju <naresh.kamboju@linaro.org>
Date:   Thu, 28 Jan 2021 19:53:19 +0530
Message-ID: <CA+G9fYta_uOLktmMnZHUTK9Uqx-rjtmQSSvHFCsvQsVdZDdm8A@mail.gmail.com>
Subject: [next] mm/nommu.c:1671:6: error: conflicting types for 'filemap_map_pages'
To:     linux-mm <linux-mm@kvack.org>,
        open list <linux-kernel@vger.kernel.org>,
        Linux-Next Mailing List <linux-next@vger.kernel.org>,
        lkft-triage@lists.linaro.org,
        Linux ARM <linux-arm-kernel@lists.infradead.org>,
        linux-sh@vger.kernel.org, linux-riscv@lists.infradead.org
Cc:     "Kirill A . Shutemov" <kirill.shutemov@linux.intel.com>,
        Will Deacon <will@kernel.org>,
        Andrew Morton <akpm@linux-foundation.org>,
        Arnd Bergmann <arnd@arndb.de>,
        Stephen Rothwell <sfr@canb.auug.org.au>
Content-Type: multipart/mixed; boundary="000000000000c7820105b9f6a171"
Precedence: bulk
List-ID: <linux-sh.vger.kernel.org>
X-Mailing-List: linux-sh@vger.kernel.org

--000000000000c7820105b9f6a171
Content-Type: text/plain; charset="UTF-8"

arm, sh and riscv architecture build failed on today's Linux next tag 20210128.

FYI,
# CONFIG_MMU is not set on these failed configs.
config file attached to this email.

make --silent --keep-going --jobs=8 O=/home/tux  -
build/.cache/tuxmake/builds/1/tmp ARCH=arm
CROSS_COMPILE=arm-linux-gnueabihf- 'CC=sccache
arm-linux-gnueabihf-gcc' 'HOSTCC=sccache gcc'
mm/nommu.c:1671:6: error: conflicting types for 'filemap_map_pages'
 1671 | void filemap_map_pages(struct vm_fault *vmf,
      |      ^~~~~~~~~~~~~~~~~
In file included from mm/nommu.c:20:
include/linux/mm.h:2578:19: note: previous declaration of
'filemap_map_pages' was here
 2578 | extern vm_fault_t filemap_map_pages(struct vm_fault *vmf,
      |                   ^~~~~~~~~~~~~~~~~

Reported-by: Naresh Kamboju <naresh.kamboju@linaro.org>

steps to reproduce:
# TuxMake is a command line tool and Python library that provides
# portable and repeatable Linux kernel builds across a variety of
# architectures, toolchains, kernel configurations, and make targets.
#
# TuxMake supports the concept of runtimes.
# See https://docs.tuxmake.org/runtimes/, for that to work it requires
# that you install podman or docker on your system.
#
# To install tuxmake on your system globally:
# sudo pip3 install -U tuxmake
#
# See https://docs.tuxmake.org/ for complete documentation.


tuxmake --runtime podman --target-arch arm --toolchain gcc-10
--kconfig tinyconfig


Following builds failed on Linux next 20210128 tag.
Regressions found on sh:
  - build/gcc-9-tinyconfig
  - build/gcc-8-allnoconfig
  - build/gcc-9-allnoconfig
  - build/gcc-8-tinyconfig
  - build/gcc-10-tinyconfig
  - build/gcc-10-allnoconfig

Regressions found on riscv:
  - build/gcc-9-tinyconfig
  - build/gcc-8-allnoconfig
  - build/clang-11-tinyconfig
  - build/gcc-9-allnoconfig
  - build/gcc-8-tinyconfig
  - build/clang-11-allnoconfig
  - build/gcc-10-tinyconfig
  - build/clang-10-allnoconfig
  - build/gcc-10-allnoconfig
  - build/clang-10-tinyconfig

Regressions found on arm:
  - build/gcc-9-tinyconfig
  - build/gcc-8-allnoconfig
  - build/clang-11-tinyconfig
  - build/gcc-9-allnoconfig
  - build/gcc-8-tinyconfig
  - build/clang-11-allnoconfig
  - build/gcc-10-tinyconfig
  - build/clang-10-allnoconfig
  - build/gcc-10-allnoconfig
  - build/clang-10-tinyconfig

--
Linaro LKFT
https://lkft.linaro.org

--000000000000c7820105b9f6a171
Content-Type: application/octet-stream; name=arm-tinyconfig
Content-Disposition: attachment; filename=arm-tinyconfig
Content-Transfer-Encoding: base64
Content-ID: <f_kkgy5x2y0>
X-Attachment-Id: f_kkgy5x2y0

IwojIEF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGZpbGU7IERPIE5PVCBFRElULgojIExpbnV4L2Fy
bSA1LjExLjAtcmM1IEtlcm5lbCBDb25maWd1cmF0aW9uCiMKQ09ORklHX0NDX1ZFUlNJT05fVEVY
VD0iYXJtLWxpbnV4LWdudWVhYmloZi1nY2MgKERlYmlhbiAxMC4yLjEtMSkgMTAuMi4xIDIwMjAx
MjA3IgpDT05GSUdfQ0NfSVNfR0NDPXkKQ09ORklHX0dDQ19WRVJTSU9OPTEwMDIwMQpDT05GSUdf
TERfVkVSU0lPTj0yMzUwMTAwMDAKQ09ORklHX0NMQU5HX1ZFUlNJT049MApDT05GSUdfTExEX1ZF
UlNJT049MApDT05GSUdfQ0NfQ0FOX0xJTks9eQpDT05GSUdfQ0NfQ0FOX0xJTktfU1RBVElDPXkK
Q09ORklHX0NDX0hBU19BU01fR09UTz15CkNPTkZJR19DQ19IQVNfQVNNX0lOTElORT15CgojCiMg
R2VuZXJhbCBzZXR1cAojCkNPTkZJR19CUk9LRU5fT05fU01QPXkKQ09ORklHX0lOSVRfRU5WX0FS
R19MSU1JVD0zMgojIENPTkZJR19DT01QSUxFX1RFU1QgaXMgbm90IHNldApDT05GSUdfTE9DQUxW
RVJTSU9OPSIiCiMgQ09ORklHX0xPQ0FMVkVSU0lPTl9BVVRPIGlzIG5vdCBzZXQKQ09ORklHX0JV
SUxEX1NBTFQ9IiIKQ09ORklHX0hBVkVfS0VSTkVMX0daSVA9eQpDT05GSUdfSEFWRV9LRVJORUxf
TFpNQT15CkNPTkZJR19IQVZFX0tFUk5FTF9YWj15CkNPTkZJR19IQVZFX0tFUk5FTF9MWk89eQpD
T05GSUdfSEFWRV9LRVJORUxfTFo0PXkKIyBDT05GSUdfS0VSTkVMX0daSVAgaXMgbm90IHNldAoj
IENPTkZJR19LRVJORUxfTFpNQSBpcyBub3Qgc2V0CkNPTkZJR19LRVJORUxfWFo9eQojIENPTkZJ
R19LRVJORUxfTFpPIGlzIG5vdCBzZXQKIyBDT05GSUdfS0VSTkVMX0xaNCBpcyBub3Qgc2V0CkNP
TkZJR19ERUZBVUxUX0lOSVQ9IiIKQ09ORklHX0RFRkFVTFRfSE9TVE5BTUU9Iihub25lKSIKIyBD
T05GSUdfU1lTVklQQyBpcyBub3Qgc2V0CiMgQ09ORklHX1dBVENIX1FVRVVFIGlzIG5vdCBzZXQK
IyBDT05GSUdfVVNFTElCIGlzIG5vdCBzZXQKQ09ORklHX0hBVkVfQVJDSF9BVURJVFNZU0NBTEw9
eQoKIwojIElSUSBzdWJzeXN0ZW0KIwpDT05GSUdfR0VORVJJQ19JUlFfUFJPQkU9eQpDT05GSUdf
R0VORVJJQ19JUlFfU0hPVz15CkNPTkZJR19HRU5FUklDX0lSUV9TSE9XX0xFVkVMPXkKQ09ORklH
X0hBUkRJUlFTX1NXX1JFU0VORD15CkNPTkZJR19HRU5FUklDX0lSUV9DSElQPXkKQ09ORklHX0lS
UV9ET01BSU49eQpDT05GSUdfSVJRX0RPTUFJTl9ISUVSQVJDSFk9eQpDT05GSUdfSEFORExFX0RP
TUFJTl9JUlE9eQpDT05GSUdfSVJRX0ZPUkNFRF9USFJFQURJTkc9eQpDT05GSUdfU1BBUlNFX0lS
UT15CiMgZW5kIG9mIElSUSBzdWJzeXN0ZW0KCkNPTkZJR19HRU5FUklDX0NMT0NLRVZFTlRTPXkK
CiMKIyBUaW1lcnMgc3Vic3lzdGVtCiMKQ09ORklHX0haX1BFUklPRElDPXkKIyBDT05GSUdfTk9f
SFpfSURMRSBpcyBub3Qgc2V0CiMgQ09ORklHX05PX0haIGlzIG5vdCBzZXQKIyBDT05GSUdfSElH
SF9SRVNfVElNRVJTIGlzIG5vdCBzZXQKIyBlbmQgb2YgVGltZXJzIHN1YnN5c3RlbQoKQ09ORklH
X1BSRUVNUFRfTk9ORT15CiMgQ09ORklHX1BSRUVNUFRfVk9MVU5UQVJZIGlzIG5vdCBzZXQKIyBD
T05GSUdfUFJFRU1QVCBpcyBub3Qgc2V0CgojCiMgQ1BVL1Rhc2sgdGltZSBhbmQgc3RhdHMgYWNj
b3VudGluZwojCkNPTkZJR19USUNLX0NQVV9BQ0NPVU5USU5HPXkKIyBDT05GSUdfVklSVF9DUFVf
QUNDT1VOVElOR19HRU4gaXMgbm90IHNldAojIENPTkZJR19JUlFfVElNRV9BQ0NPVU5USU5HIGlz
IG5vdCBzZXQKIyBDT05GSUdfUFNJIGlzIG5vdCBzZXQKIyBlbmQgb2YgQ1BVL1Rhc2sgdGltZSBh
bmQgc3RhdHMgYWNjb3VudGluZwoKIwojIFJDVSBTdWJzeXN0ZW0KIwpDT05GSUdfVElOWV9SQ1U9
eQojIENPTkZJR19SQ1VfRVhQRVJUIGlzIG5vdCBzZXQKQ09ORklHX1NSQ1U9eQpDT05GSUdfVElO
WV9TUkNVPXkKIyBlbmQgb2YgUkNVIFN1YnN5c3RlbQoKIyBDT05GSUdfSUtDT05GSUcgaXMgbm90
IHNldApDT05GSUdfR0VORVJJQ19TQ0hFRF9DTE9DSz15CgojCiMgU2NoZWR1bGVyIGZlYXR1cmVz
CiMKIyBlbmQgb2YgU2NoZWR1bGVyIGZlYXR1cmVzCgojIENPTkZJR19DR1JPVVBTIGlzIG5vdCBz
ZXQKIyBDT05GSUdfQ0hFQ0tQT0lOVF9SRVNUT1JFIGlzIG5vdCBzZXQKIyBDT05GSUdfU0NIRURf
QVVUT0dST1VQIGlzIG5vdCBzZXQKIyBDT05GSUdfUkVMQVkgaXMgbm90IHNldAojIENPTkZJR19C
TEtfREVWX0lOSVRSRCBpcyBub3Qgc2V0CiMgQ09ORklHX0JPT1RfQ09ORklHIGlzIG5vdCBzZXQK
IyBDT05GSUdfQ0NfT1BUSU1JWkVfRk9SX1BFUkZPUk1BTkNFIGlzIG5vdCBzZXQKQ09ORklHX0ND
X09QVElNSVpFX0ZPUl9TSVpFPXkKQ09ORklHX0xEX09SUEhBTl9XQVJOPXkKQ09ORklHX0hBVkVf
VUlEMTY9eQpDT05GSUdfRVhQRVJUPXkKIyBDT05GSUdfTVVMVElVU0VSIGlzIG5vdCBzZXQKIyBD
T05GSUdfU0dFVE1BU0tfU1lTQ0FMTCBpcyBub3Qgc2V0CiMgQ09ORklHX1NZU0ZTX1NZU0NBTEwg
aXMgbm90IHNldAojIENPTkZJR19GSEFORExFIGlzIG5vdCBzZXQKIyBDT05GSUdfUE9TSVhfVElN
RVJTIGlzIG5vdCBzZXQKIyBDT05GSUdfUFJJTlRLIGlzIG5vdCBzZXQKIyBDT05GSUdfQlVHIGlz
IG5vdCBzZXQKIyBDT05GSUdfQkFTRV9GVUxMIGlzIG5vdCBzZXQKIyBDT05GSUdfRlVURVggaXMg
bm90IHNldAojIENPTkZJR19FUE9MTCBpcyBub3Qgc2V0CiMgQ09ORklHX1NJR05BTEZEIGlzIG5v
dCBzZXQKIyBDT05GSUdfVElNRVJGRCBpcyBub3Qgc2V0CiMgQ09ORklHX0VWRU5URkQgaXMgbm90
IHNldAojIENPTkZJR19BSU8gaXMgbm90IHNldAojIENPTkZJR19JT19VUklORyBpcyBub3Qgc2V0
CiMgQ09ORklHX0FEVklTRV9TWVNDQUxMUyBpcyBub3Qgc2V0CiMgQ09ORklHX01FTUJBUlJJRVIg
aXMgbm90IHNldAojIENPTkZJR19LQUxMU1lNUyBpcyBub3Qgc2V0CiMgQ09ORklHX0JQRl9TWVND
QUxMIGlzIG5vdCBzZXQKQ09ORklHX0FSQ0hfSEFTX01FTUJBUlJJRVJfU1lOQ19DT1JFPXkKIyBD
T05GSUdfUlNFUSBpcyBub3Qgc2V0CkNPTkZJR19FTUJFRERFRD15CkNPTkZJR19IQVZFX1BFUkZf
RVZFTlRTPXkKQ09ORklHX1BFUkZfVVNFX1ZNQUxMT0M9eQojIENPTkZJR19QQzEwNCBpcyBub3Qg
c2V0CgojCiMgS2VybmVsIFBlcmZvcm1hbmNlIEV2ZW50cyBBbmQgQ291bnRlcnMKIwojIENPTkZJ
R19QRVJGX0VWRU5UUyBpcyBub3Qgc2V0CiMgZW5kIG9mIEtlcm5lbCBQZXJmb3JtYW5jZSBFdmVu
dHMgQW5kIENvdW50ZXJzCgojIENPTkZJR19WTV9FVkVOVF9DT1VOVEVSUyBpcyBub3Qgc2V0CiMg
Q09ORklHX0NPTVBBVF9CUksgaXMgbm90IHNldAojIENPTkZJR19TTEFCIGlzIG5vdCBzZXQKIyBD
T05GSUdfU0xVQiBpcyBub3Qgc2V0CkNPTkZJR19TTE9CPXkKIyBDT05GSUdfU0xBQl9NRVJHRV9E
RUZBVUxUIGlzIG5vdCBzZXQKIyBDT05GSUdfU0hVRkZMRV9QQUdFX0FMTE9DQVRPUiBpcyBub3Qg
c2V0CiMgQ09ORklHX01NQVBfQUxMT1dfVU5JTklUSUFMSVpFRCBpcyBub3Qgc2V0CiMgQ09ORklH
X1BST0ZJTElORyBpcyBub3Qgc2V0CiMgZW5kIG9mIEdlbmVyYWwgc2V0dXAKCkNPTkZJR19BUk09
eQpDT05GSUdfU1lTX1NVUFBPUlRTX0FQTV9FTVVMQVRJT049eQpDT05GSUdfTk9fSU9QT1JUX01B
UD15CkNPTkZJR19TVEFDS1RSQUNFX1NVUFBPUlQ9eQpDT05GSUdfTE9DS0RFUF9TVVBQT1JUPXkK
Q09ORklHX0dFTkVSSUNfSFdFSUdIVD15CkNPTkZJR19HRU5FUklDX0NBTElCUkFURV9ERUxBWT15
CkNPTkZJR19BUkNIX1NVUFBPUlRTX1VQUk9CRVM9eQpDT05GSUdfUEhZU19PRkZTRVQ9MHgwMDgw
MDAwMApDT05GSUdfUEdUQUJMRV9MRVZFTFM9MgoKIwojIFN5c3RlbSBUeXBlCiMKIyBDT05GSUdf
TU1VIGlzIG5vdCBzZXQKQ09ORklHX0FSQ0hfTU1BUF9STkRfQklUU19NSU49OApDT05GSUdfQVJD
SF9NTUFQX1JORF9CSVRTX01BWD0xNgpDT05GSUdfQVJNX1NJTkdMRV9BUk1WN009eQojIENPTkZJ
R19BUkNIX0VQOTNYWCBpcyBub3Qgc2V0CiMgQ09ORklHX0FSQ0hfRk9PVEJSSURHRSBpcyBub3Qg
c2V0CiMgQ09ORklHX0FSQ0hfRE9WRSBpcyBub3Qgc2V0CiMgQ09ORklHX0FSQ0hfU0ExMTAwIGlz
IG5vdCBzZXQKIyBDT05GSUdfQVJDSF9TM0MyNFhYIGlzIG5vdCBzZXQKIyBDT05GSUdfQVJDSF9B
VDkxIGlzIG5vdCBzZXQKIyBDT05GSUdfQVJDSF9NWEMgaXMgbm90IHNldAojIENPTkZJR19BUkNI
X1NUTTMyIGlzIG5vdCBzZXQKIyBDT05GSUdfQVJDSF9MUEMxOFhYIGlzIG5vdCBzZXQKIyBDT05G
SUdfQVJDSF9NUFMyIGlzIG5vdCBzZXQKCiMKIyBQcm9jZXNzb3IgVHlwZQojCkNPTkZJR19DUFVf
VjdNPXkKQ09ORklHX0NQVV9USFVNQk9OTFk9eQpDT05GSUdfQ1BVX1RIVU1CX0NBUEFCTEU9eQpD
T05GSUdfQ1BVXzMydjdNPXkKQ09ORklHX0NQVV9BQlJUX05PTU1VPXkKQ09ORklHX0NQVV9QQUJS
VF9MRUdBQ1k9eQpDT05GSUdfQ1BVX0NBQ0hFX05PUD15CkNPTkZJR19DUFVfQ0FDSEVfVjdNPXkK
Q09ORklHX0NQVV9WN01fTlVNX0lSUT0yNDAKCiMKIyBQcm9jZXNzb3IgRmVhdHVyZXMKIwpDT05G
SUdfQVJNX1RIVU1CPXkKIyBDT05GSUdfQ1BVX0lDQUNIRV9ESVNBQkxFIGlzIG5vdCBzZXQKIyBD
T05GSUdfQ1BVX0RDQUNIRV9ESVNBQkxFIGlzIG5vdCBzZXQKIyBDT05GSUdfQ1BVX0JQUkVESUNU
X0RJU0FCTEUgaXMgbm90IHNldApDT05GSUdfQVJNX0wxX0NBQ0hFX1NISUZUPTUKIyBDT05GSUdf
QVJNX0RNQV9NRU1fQlVGRkVSQUJMRSBpcyBub3Qgc2V0CiMgQ09ORklHX1NFVF9NRU1fUEFSQU0g
aXMgbm90IHNldApDT05GSUdfRFJBTV9CQVNFPTB4MDA4MDAwMDAKQ09ORklHX0RSQU1fU0laRT0w
eDAwODAwMDAwCiMgQ09ORklHX1JFTUFQX1ZFQ1RPUlNfVE9fUkFNIGlzIG5vdCBzZXQKIyBDT05G
SUdfQVJNX01QVSBpcyBub3Qgc2V0CiMgZW5kIG9mIFN5c3RlbSBUeXBlCgojCiMgQnVzIHN1cHBv
cnQKIwojIGVuZCBvZiBCdXMgc3VwcG9ydAoKIwojIEtlcm5lbCBGZWF0dXJlcwojCkNPTkZJR19Q
QUdFX09GRlNFVD0weDAwODAwMDAwCkNPTkZJR19BUkNIX05SX0dQSU89MApDT05GSUdfSFpfRklY
RUQ9MApDT05GSUdfSFpfMTAwPXkKIyBDT05GSUdfSFpfMjAwIGlzIG5vdCBzZXQKIyBDT05GSUdf
SFpfMjUwIGlzIG5vdCBzZXQKIyBDT05GSUdfSFpfMzAwIGlzIG5vdCBzZXQKIyBDT05GSUdfSFpf
NTAwIGlzIG5vdCBzZXQKIyBDT05GSUdfSFpfMTAwMCBpcyBub3Qgc2V0CkNPTkZJR19IWj0xMDAK
Q09ORklHX1RIVU1CMl9LRVJORUw9eQpDT05GSUdfQUVBQkk9eQpDT05GSUdfQVJDSF9XQU5UX0dF
TkVSQUxfSFVHRVRMQj15CkNPTkZJR19GT1JDRV9NQVhfWk9ORU9SREVSPTExCiMgQ09ORklHX1BB
UkFWSVJUIGlzIG5vdCBzZXQKIyBDT05GSUdfUEFSQVZJUlRfVElNRV9BQ0NPVU5USU5HIGlzIG5v
dCBzZXQKIyBlbmQgb2YgS2VybmVsIEZlYXR1cmVzCgojCiMgQm9vdCBvcHRpb25zCiMKQ09ORklH
X1VTRV9PRj15CiMgQ09ORklHX0FUQUdTIGlzIG5vdCBzZXQKQ09ORklHX1pCT09UX1JPTV9URVhU
PTB4MApDT05GSUdfWkJPT1RfUk9NX0JTUz0weDAKIyBDT05GSUdfQVJNX0FQUEVOREVEX0RUQiBp
cyBub3Qgc2V0CkNPTkZJR19DTURMSU5FPSIiCiMgQ09ORklHX1hJUF9LRVJORUwgaXMgbm90IHNl
dAojIENPTkZJR19DUkFTSF9EVU1QIGlzIG5vdCBzZXQKQ09ORklHX0FVVE9fWlJFTEFERFI9eQoj
IGVuZCBvZiBCb290IG9wdGlvbnMKCiMKIyBDUFUgUG93ZXIgTWFuYWdlbWVudAojCgojCiMgQ1BV
IEZyZXF1ZW5jeSBzY2FsaW5nCiMKIyBDT05GSUdfQ1BVX0ZSRVEgaXMgbm90IHNldAojIGVuZCBv
ZiBDUFUgRnJlcXVlbmN5IHNjYWxpbmcKCiMKIyBDUFUgSWRsZQojCiMgQ09ORklHX0NQVV9JRExF
IGlzIG5vdCBzZXQKIyBlbmQgb2YgQ1BVIElkbGUKIyBlbmQgb2YgQ1BVIFBvd2VyIE1hbmFnZW1l
bnQKCiMKIyBGbG9hdGluZyBwb2ludCBlbXVsYXRpb24KIwoKIwojIEF0IGxlYXN0IG9uZSBlbXVs
YXRpb24gbXVzdCBiZSBzZWxlY3RlZAojCiMgZW5kIG9mIEZsb2F0aW5nIHBvaW50IGVtdWxhdGlv
bgoKIwojIFBvd2VyIG1hbmFnZW1lbnQgb3B0aW9ucwojCiMgQ09ORklHX1NVU1BFTkQgaXMgbm90
IHNldAojIENPTkZJR19QTSBpcyBub3Qgc2V0CiMgQ09ORklHX0FQTV9FTVVMQVRJT04gaXMgbm90
IHNldApDT05GSUdfQVJDSF9TVVNQRU5EX1BPU1NJQkxFPXkKIyBlbmQgb2YgUG93ZXIgbWFuYWdl
bWVudCBvcHRpb25zCgojCiMgRmlybXdhcmUgRHJpdmVycwojCiMgQ09ORklHX0ZJUk1XQVJFX01F
TU1BUCBpcyBub3Qgc2V0CiMgQ09ORklHX0dPT0dMRV9GSVJNV0FSRSBpcyBub3Qgc2V0CgojCiMg
VGVncmEgZmlybXdhcmUgZHJpdmVyCiMKIyBlbmQgb2YgVGVncmEgZmlybXdhcmUgZHJpdmVyCiMg
ZW5kIG9mIEZpcm13YXJlIERyaXZlcnMKCkNPTkZJR19BU19WRlBfVk1SU19GUElOU1Q9eQoKIwoj
IEdlbmVyYWwgYXJjaGl0ZWN0dXJlLWRlcGVuZGVudCBvcHRpb25zCiMKQ09ORklHX1NFVF9GUz15
CkNPTkZJR19BUkNIX1VTRV9CVUlMVElOX0JTV0FQPXkKQ09ORklHX0hBVkVfTk1JPXkKQ09ORklH
X0hBVkVfQVJDSF9UUkFDRUhPT0s9eQpDT05GSUdfR0VORVJJQ19TTVBfSURMRV9USFJFQUQ9eQpD
T05GSUdfR0VORVJJQ19JRExFX1BPTExfU0VUVVA9eQpDT05GSUdfQVJDSF9IQVNfRk9SVElGWV9T
T1VSQ0U9eQpDT05GSUdfQVJDSF9IQVNfS0VFUElOSVRSRD15CkNPTkZJR19BUkNIX0hBU19TRVRf
TUVNT1JZPXkKQ09ORklHX0hBVkVfQVJDSF9USFJFQURfU1RSVUNUX1dISVRFTElTVD15CkNPTkZJ
R19BUkNIXzMyQklUX09GRl9UPXkKQ09ORklHX0hBVkVfUkVHU19BTkRfU1RBQ0tfQUNDRVNTX0FQ
ST15CkNPTkZJR19IQVZFX1JTRVE9eQpDT05GSUdfSEFWRV9QRVJGX1JFR1M9eQpDT05GSUdfSEFW
RV9QRVJGX1VTRVJfU1RBQ0tfRFVNUD15CkNPTkZJR19BUkNIX1dBTlRfSVBDX1BBUlNFX1ZFUlNJ
T049eQpDT05GSUdfSEFWRV9BUkNIX1NFQ0NPTVA9eQpDT05GSUdfSEFWRV9BUkNIX1NFQ0NPTVBf
RklMVEVSPXkKIyBDT05GSUdfU0VDQ09NUCBpcyBub3Qgc2V0CkNPTkZJR19IQVZFX1NUQUNLUFJP
VEVDVE9SPXkKIyBDT05GSUdfU1RBQ0tQUk9URUNUT1IgaXMgbm90IHNldApDT05GSUdfTFRPX05P
TkU9eQpDT05GSUdfSEFWRV9DT05URVhUX1RSQUNLSU5HPXkKQ09ORklHX0hBVkVfVklSVF9DUFVf
QUNDT1VOVElOR19HRU49eQpDT05GSUdfSEFWRV9JUlFfVElNRV9BQ0NPVU5USU5HPXkKQ09ORklH
X0hBVkVfTU9EX0FSQ0hfU1BFQ0lGSUM9eQpDT05GSUdfTU9EVUxFU19VU0VfRUxGX1JFTD15CkNP
TkZJR19BUkNIX0hBU19FTEZfUkFORE9NSVpFPXkKQ09ORklHX0hBVkVfRVhJVF9USFJFQUQ9eQpD
T05GSUdfQ0xPTkVfQkFDS1dBUkRTPXkKQ09ORklHX09MRF9TSUdTVVNQRU5EMz15CkNPTkZJR19P
TERfU0lHQUNUSU9OPXkKIyBDT05GSUdfQ09NUEFUXzMyQklUX1RJTUUgaXMgbm90IHNldApDT05G
SUdfQVJDSF9IQVNfUEhZU19UT19ETUE9eQpDT05GSUdfQVJDSF9XQU5UX0xEX09SUEhBTl9XQVJO
PXkKQ09ORklHX0hBVkVfQVJDSF9QRk5fVkFMSUQ9eQoKIwojIEdDT1YtYmFzZWQga2VybmVsIHBy
b2ZpbGluZwojCkNPTkZJR19BUkNIX0hBU19HQ09WX1BST0ZJTEVfQUxMPXkKIyBlbmQgb2YgR0NP
Vi1iYXNlZCBrZXJuZWwgcHJvZmlsaW5nCgpDT05GSUdfSEFWRV9HQ0NfUExVR0lOUz15CiMgQ09O
RklHX0dDQ19QTFVHSU5TIGlzIG5vdCBzZXQKIyBlbmQgb2YgR2VuZXJhbCBhcmNoaXRlY3R1cmUt
ZGVwZW5kZW50IG9wdGlvbnMKCkNPTkZJR19CQVNFX1NNQUxMPTEKIyBDT05GSUdfTU9EVUxFUyBp
cyBub3Qgc2V0CiMgQ09ORklHX0JMT0NLIGlzIG5vdCBzZXQKQ09ORklHX0lOTElORV9TUElOX1VO
TE9DS19JUlE9eQpDT05GSUdfSU5MSU5FX1JFQURfVU5MT0NLPXkKQ09ORklHX0lOTElORV9SRUFE
X1VOTE9DS19JUlE9eQpDT05GSUdfSU5MSU5FX1dSSVRFX1VOTE9DSz15CkNPTkZJR19JTkxJTkVf
V1JJVEVfVU5MT0NLX0lSUT15CkNPTkZJR19BUkNIX1NVUFBPUlRTX0FUT01JQ19STVc9eQpDT05G
SUdfQVJDSF9IQVNfTk9OX09WRVJMQVBQSU5HX0FERFJFU1NfU1BBQ0U9eQoKIwojIEV4ZWN1dGFi
bGUgZmlsZSBmb3JtYXRzCiMKIyBDT05GSUdfQklORk1UX0VMRl9GRFBJQyBpcyBub3Qgc2V0CiMg
Q09ORklHX0JJTkZNVF9TQ1JJUFQgaXMgbm90IHNldApDT05GSUdfQVJDSF9IQVNfQklORk1UX0ZM
QVQ9eQojIENPTkZJR19CSU5GTVRfRkxBVCBpcyBub3Qgc2V0CkNPTkZJR19CSU5GTVRfRkxBVF9B
UkdWUF9FTlZQX09OX1NUQUNLPXkKIyBDT05GSUdfQklORk1UX01JU0MgaXMgbm90IHNldAojIENP
TkZJR19DT1JFRFVNUCBpcyBub3Qgc2V0CiMgZW5kIG9mIEV4ZWN1dGFibGUgZmlsZSBmb3JtYXRz
CgojCiMgTWVtb3J5IE1hbmFnZW1lbnQgb3B0aW9ucwojCkNPTkZJR19GTEFUTUVNPXkKQ09ORklH
X0ZMQVRfTk9ERV9NRU1fTUFQPXkKQ09ORklHX0FSQ0hfS0VFUF9NRU1CTE9DSz15CkNPTkZJR19T
UExJVF9QVExPQ0tfQ1BVUz05OTk5OTkKIyBDT05GSUdfUEFHRV9SRVBPUlRJTkcgaXMgbm90IHNl
dApDT05GSUdfTk9NTVVfSU5JVElBTF9UUklNX0VYQ0VTUz0xCkNPTkZJR19ORUVEX1BFUl9DUFVf
S009eQojIENPTkZJR19DTEVBTkNBQ0hFIGlzIG5vdCBzZXQKIyBDT05GSUdfWlBPT0wgaXMgbm90
IHNldAojIENPTkZJR19aQlVEIGlzIG5vdCBzZXQKQ09ORklHX0dFTkVSSUNfRUFSTFlfSU9SRU1B
UD15CiMgQ09ORklHX1BFUkNQVV9TVEFUUyBpcyBub3Qgc2V0CgojCiMgR1VQX1RFU1QgbmVlZHMg
dG8gaGF2ZSBERUJVR19GUyBlbmFibGVkCiMKIyBlbmQgb2YgTWVtb3J5IE1hbmFnZW1lbnQgb3B0
aW9ucwoKIyBDT05GSUdfTkVUIGlzIG5vdCBzZXQKQ09ORklHX0hBVkVfRUJQRl9KSVQ9eQoKIwoj
IERldmljZSBEcml2ZXJzCiMKIyBDT05GSUdfUENDQVJEIGlzIG5vdCBzZXQKCiMKIyBHZW5lcmlj
IERyaXZlciBPcHRpb25zCiMKIyBDT05GSUdfVUVWRU5UX0hFTFBFUiBpcyBub3Qgc2V0CiMgQ09O
RklHX0RFVlRNUEZTIGlzIG5vdCBzZXQKIyBDT05GSUdfU1RBTkRBTE9ORSBpcyBub3Qgc2V0CiMg
Q09ORklHX1BSRVZFTlRfRklSTVdBUkVfQlVJTEQgaXMgbm90IHNldAoKIwojIEZpcm13YXJlIGxv
YWRlcgojCiMgQ09ORklHX0ZXX0xPQURFUiBpcyBub3Qgc2V0CiMgZW5kIG9mIEZpcm13YXJlIGxv
YWRlcgoKIyBDT05GSUdfQUxMT1dfREVWX0NPUkVEVU1QIGlzIG5vdCBzZXQKIyBDT05GSUdfREVC
VUdfRFJJVkVSIGlzIG5vdCBzZXQKIyBDT05GSUdfREVCVUdfREVWUkVTIGlzIG5vdCBzZXQKIyBD
T05GSUdfREVCVUdfVEVTVF9EUklWRVJfUkVNT1ZFIGlzIG5vdCBzZXQKQ09ORklHX0dFTkVSSUNf
Q1BVX0FVVE9QUk9CRT15CiMgZW5kIG9mIEdlbmVyaWMgRHJpdmVyIE9wdGlvbnMKCiMKIyBCdXMg
ZGV2aWNlcwojCiMgQ09ORklHX0JSQ01TVEJfR0lTQl9BUkIgaXMgbm90IHNldAojIENPTkZJR19W
RVhQUkVTU19DT05GSUcgaXMgbm90IHNldAojIENPTkZJR19NSElfQlVTIGlzIG5vdCBzZXQKIyBl
bmQgb2YgQnVzIGRldmljZXMKCiMgQ09ORklHX0dOU1MgaXMgbm90IHNldAojIENPTkZJR19NVEQg
aXMgbm90IHNldApDT05GSUdfRFRDPXkKQ09ORklHX09GPXkKIyBDT05GSUdfT0ZfVU5JVFRFU1Qg
aXMgbm90IHNldApDT05GSUdfT0ZfRkxBVFRSRUU9eQpDT05GSUdfT0ZfRUFSTFlfRkxBVFRSRUU9
eQpDT05GSUdfT0ZfQUREUkVTUz15CkNPTkZJR19PRl9JUlE9eQpDT05GSUdfT0ZfUkVTRVJWRURf
TUVNPXkKIyBDT05GSUdfT0ZfT1ZFUkxBWSBpcyBub3Qgc2V0CkNPTkZJR19BUkNIX01JR0hUX0hB
VkVfUENfUEFSUE9SVD15CiMgQ09ORklHX1BBUlBPUlQgaXMgbm90IHNldAoKIwojIE5WTUUgU3Vw
cG9ydAojCiMgZW5kIG9mIE5WTUUgU3VwcG9ydAoKIwojIE1pc2MgZGV2aWNlcwojCiMgQ09ORklH
X0RVTU1ZX0lSUSBpcyBub3Qgc2V0CiMgQ09ORklHX0VOQ0xPU1VSRV9TRVJWSUNFUyBpcyBub3Qg
c2V0CiMgQ09ORklHX1NSQU0gaXMgbm90IHNldAojIENPTkZJR19YSUxJTlhfU0RGRUMgaXMgbm90
IHNldAojIENPTkZJR19QVlBBTklDIGlzIG5vdCBzZXQKIyBDT05GSUdfQzJQT1JUIGlzIG5vdCBz
ZXQKCiMKIyBFRVBST00gc3VwcG9ydAojCiMgQ09ORklHX0VFUFJPTV85M0NYNiBpcyBub3Qgc2V0
CiMgZW5kIG9mIEVFUFJPTSBzdXBwb3J0CgojCiMgVGV4YXMgSW5zdHJ1bWVudHMgc2hhcmVkIHRy
YW5zcG9ydCBsaW5lIGRpc2NpcGxpbmUKIwojIGVuZCBvZiBUZXhhcyBJbnN0cnVtZW50cyBzaGFy
ZWQgdHJhbnNwb3J0IGxpbmUgZGlzY2lwbGluZQoKIwojIEFsdGVyYSBGUEdBIGZpcm13YXJlIGRv
d25sb2FkIG1vZHVsZSAocmVxdWlyZXMgSTJDKQojCiMgQ09ORklHX0VDSE8gaXMgbm90IHNldAoj
IGVuZCBvZiBNaXNjIGRldmljZXMKCiMKIyBTQ1NJIGRldmljZSBzdXBwb3J0CiMKQ09ORklHX1ND
U0lfTU9EPXkKIyBlbmQgb2YgU0NTSSBkZXZpY2Ugc3VwcG9ydAoKIwojIElucHV0IGRldmljZSBz
dXBwb3J0CiMKIyBDT05GSUdfSU5QVVQgaXMgbm90IHNldAoKIwojIEhhcmR3YXJlIEkvTyBwb3J0
cwojCiMgQ09ORklHX1NFUklPIGlzIG5vdCBzZXQKIyBDT05GSUdfR0FNRVBPUlQgaXMgbm90IHNl
dAojIGVuZCBvZiBIYXJkd2FyZSBJL08gcG9ydHMKIyBlbmQgb2YgSW5wdXQgZGV2aWNlIHN1cHBv
cnQKCiMKIyBDaGFyYWN0ZXIgZGV2aWNlcwojCiMgQ09ORklHX1RUWSBpcyBub3Qgc2V0CiMgQ09O
RklHX1NFUklBTF9ERVZfQlVTIGlzIG5vdCBzZXQKIyBDT05GSUdfSVBNSV9IQU5ETEVSIGlzIG5v
dCBzZXQKIyBDT05GSUdfSFdfUkFORE9NIGlzIG5vdCBzZXQKIyBDT05GSUdfREVWTUVNIGlzIG5v
dCBzZXQKIyBDT05GSUdfREVWS01FTSBpcyBub3Qgc2V0CiMgQ09ORklHX1RDR19UUE0gaXMgbm90
IHNldAojIENPTkZJR19YSUxMWUJVUyBpcyBub3Qgc2V0CiMgZW5kIG9mIENoYXJhY3RlciBkZXZp
Y2VzCgojIENPTkZJR19SQU5ET01fVFJVU1RfQk9PVExPQURFUiBpcyBub3Qgc2V0CgojCiMgSTJD
IHN1cHBvcnQKIwojIENPTkZJR19JMkMgaXMgbm90IHNldAojIGVuZCBvZiBJMkMgc3VwcG9ydAoK
IyBDT05GSUdfSTNDIGlzIG5vdCBzZXQKIyBDT05GSUdfU1BJIGlzIG5vdCBzZXQKIyBDT05GSUdf
U1BNSSBpcyBub3Qgc2V0CiMgQ09ORklHX0hTSSBpcyBub3Qgc2V0CiMgQ09ORklHX1BQUyBpcyBu
b3Qgc2V0CgojCiMgUFRQIGNsb2NrIHN1cHBvcnQKIwoKIwojIEVuYWJsZSBQSFlMSUIgYW5kIE5F
VFdPUktfUEhZX1RJTUVTVEFNUElORyB0byBzZWUgdGhlIGFkZGl0aW9uYWwgY2xvY2tzLgojCiMg
ZW5kIG9mIFBUUCBjbG9jayBzdXBwb3J0CgojIENPTkZJR19QSU5DVFJMIGlzIG5vdCBzZXQKQ09O
RklHX0FSQ0hfSEFWRV9DVVNUT01fR1BJT19IPXkKIyBDT05GSUdfR1BJT0xJQiBpcyBub3Qgc2V0
CiMgQ09ORklHX1cxIGlzIG5vdCBzZXQKIyBDT05GSUdfUE9XRVJfUkVTRVQgaXMgbm90IHNldAoj
IENPTkZJR19QT1dFUl9TVVBQTFkgaXMgbm90IHNldAojIENPTkZJR19IV01PTiBpcyBub3Qgc2V0
CiMgQ09ORklHX1RIRVJNQUwgaXMgbm90IHNldAojIENPTkZJR19XQVRDSERPRyBpcyBub3Qgc2V0
CkNPTkZJR19TU0JfUE9TU0lCTEU9eQojIENPTkZJR19TU0IgaXMgbm90IHNldApDT05GSUdfQkNN
QV9QT1NTSUJMRT15CiMgQ09ORklHX0JDTUEgaXMgbm90IHNldAoKIwojIE11bHRpZnVuY3Rpb24g
ZGV2aWNlIGRyaXZlcnMKIwojIENPTkZJR19NRkRfQVRNRUxfRkxFWENPTSBpcyBub3Qgc2V0CiMg
Q09ORklHX01GRF9BVE1FTF9ITENEQyBpcyBub3Qgc2V0CiMgQ09ORklHX01GRF9NQURFUkEgaXMg
bm90IHNldAojIENPTkZJR19NRkRfSEk2NDIxX1BNSUMgaXMgbm90IHNldAojIENPTkZJR19IVENf
UEFTSUMzIGlzIG5vdCBzZXQKIyBDT05GSUdfTUZEX0tFTVBMRCBpcyBub3Qgc2V0CiMgQ09ORklH
X01GRF9NVDYzOTcgaXMgbm90IHNldAojIENPTkZJR19NRkRfUE04WFhYIGlzIG5vdCBzZXQKIyBD
T05GSUdfTUZEX1NNNTAxIGlzIG5vdCBzZXQKIyBDT05GSUdfQUJYNTAwX0NPUkUgaXMgbm90IHNl
dAojIENPTkZJR19NRkRfU1lTQ09OIGlzIG5vdCBzZXQKIyBDT05GSUdfTUZEX1RJX0FNMzM1WF9U
U0NBREMgaXMgbm90IHNldAojIENPTkZJR19NRkRfVDdMNjZYQiBpcyBub3Qgc2V0CiMgQ09ORklH
X01GRF9UQzYzODdYQiBpcyBub3Qgc2V0CiMgQ09ORklHX01GRF9UQzYzOTNYQiBpcyBub3Qgc2V0
CiMgQ09ORklHX01GRF9UUU1YODYgaXMgbm90IHNldAojIGVuZCBvZiBNdWx0aWZ1bmN0aW9uIGRl
dmljZSBkcml2ZXJzCgojIENPTkZJR19SRUdVTEFUT1IgaXMgbm90IHNldAojIENPTkZJR19NRURJ
QV9DRUNfU1VQUE9SVCBpcyBub3Qgc2V0CiMgQ09ORklHX01FRElBX1NVUFBPUlQgaXMgbm90IHNl
dAoKIwojIEdyYXBoaWNzIHN1cHBvcnQKIwojIENPTkZJR19EUk0gaXMgbm90IHNldAoKIwojIEFS
TSBkZXZpY2VzCiMKIyBlbmQgb2YgQVJNIGRldmljZXMKCiMKIyBGcmFtZSBidWZmZXIgRGV2aWNl
cwojCiMgQ09ORklHX0ZCIGlzIG5vdCBzZXQKIyBlbmQgb2YgRnJhbWUgYnVmZmVyIERldmljZXMK
CiMKIyBCYWNrbGlnaHQgJiBMQ0QgZGV2aWNlIHN1cHBvcnQKIwojIENPTkZJR19MQ0RfQ0xBU1Nf
REVWSUNFIGlzIG5vdCBzZXQKIyBDT05GSUdfQkFDS0xJR0hUX0NMQVNTX0RFVklDRSBpcyBub3Qg
c2V0CiMgZW5kIG9mIEJhY2tsaWdodCAmIExDRCBkZXZpY2Ugc3VwcG9ydAojIGVuZCBvZiBHcmFw
aGljcyBzdXBwb3J0CgojIENPTkZJR19TT1VORCBpcyBub3Qgc2V0CkNPTkZJR19VU0JfT0hDSV9M
SVRUTEVfRU5ESUFOPXkKIyBDT05GSUdfVVNCX1NVUFBPUlQgaXMgbm90IHNldAojIENPTkZJR19N
TUMgaXMgbm90IHNldAojIENPTkZJR19NRU1TVElDSyBpcyBub3Qgc2V0CiMgQ09ORklHX05FV19M
RURTIGlzIG5vdCBzZXQKIyBDT05GSUdfQUNDRVNTSUJJTElUWSBpcyBub3Qgc2V0CkNPTkZJR19F
REFDX0FUT01JQ19TQ1JVQj15CkNPTkZJR19FREFDX1NVUFBPUlQ9eQpDT05GSUdfUlRDX0xJQj15
CiMgQ09ORklHX1JUQ19DTEFTUyBpcyBub3Qgc2V0CiMgQ09ORklHX0RNQURFVklDRVMgaXMgbm90
IHNldAoKIwojIERNQUJVRiBvcHRpb25zCiMKIyBDT05GSUdfU1lOQ19GSUxFIGlzIG5vdCBzZXQK
IyBDT05GSUdfRE1BQlVGX01PVkVfTk9USUZZIGlzIG5vdCBzZXQKIyBDT05GSUdfRE1BQlVGX0RF
QlVHIGlzIG5vdCBzZXQKIyBDT05GSUdfRE1BQlVGX0hFQVBTIGlzIG5vdCBzZXQKIyBlbmQgb2Yg
RE1BQlVGIG9wdGlvbnMKCiMgQ09ORklHX0FVWERJU1BMQVkgaXMgbm90IHNldAojIENPTkZJR19W
SVJUX0RSSVZFUlMgaXMgbm90IHNldAojIENPTkZJR19WSVJUSU9fTUVOVSBpcyBub3Qgc2V0CiMg
Q09ORklHX1ZIT1NUX01FTlUgaXMgbm90IHNldAoKIwojIE1pY3Jvc29mdCBIeXBlci1WIGd1ZXN0
IHN1cHBvcnQKIwojIGVuZCBvZiBNaWNyb3NvZnQgSHlwZXItViBndWVzdCBzdXBwb3J0CgojIENP
TkZJR19TVEFHSU5HIGlzIG5vdCBzZXQKIyBDT05GSUdfR09MREZJU0ggaXMgbm90IHNldAojIENP
TkZJR19DSFJPTUVfUExBVEZPUk1TIGlzIG5vdCBzZXQKIyBDT05GSUdfTUVMTEFOT1hfUExBVEZP
Uk0gaXMgbm90IHNldApDT05GSUdfSEFWRV9DTEs9eQpDT05GSUdfQ0xLREVWX0xPT0tVUD15CkNP
TkZJR19IQVZFX0NMS19QUkVQQVJFPXkKQ09ORklHX0NPTU1PTl9DTEs9eQojIENPTkZJR19DT01N
T05fQ0xLX0ZJWEVEX01NSU8gaXMgbm90IHNldAojIENPTkZJR19IV1NQSU5MT0NLIGlzIG5vdCBz
ZXQKCiMKIyBDbG9jayBTb3VyY2UgZHJpdmVycwojCkNPTkZJR19USU1FUl9PRj15CkNPTkZJR19U
SU1FUl9QUk9CRT15CiMgQ09ORklHX01JQ1JPQ0hJUF9QSVQ2NEIgaXMgbm90IHNldAojIGVuZCBv
ZiBDbG9jayBTb3VyY2UgZHJpdmVycwoKIyBDT05GSUdfTUFJTEJPWCBpcyBub3Qgc2V0CgojCiMg
UmVtb3RlcHJvYyBkcml2ZXJzCiMKIyBDT05GSUdfUkVNT1RFUFJPQyBpcyBub3Qgc2V0CiMgZW5k
IG9mIFJlbW90ZXByb2MgZHJpdmVycwoKIwojIFJwbXNnIGRyaXZlcnMKIwojIENPTkZJR19SUE1T
R19WSVJUSU8gaXMgbm90IHNldAojIGVuZCBvZiBScG1zZyBkcml2ZXJzCgojIENPTkZJR19TT1VO
RFdJUkUgaXMgbm90IHNldAoKIwojIFNPQyAoU3lzdGVtIE9uIENoaXApIHNwZWNpZmljIERyaXZl
cnMKIwoKIwojIEFtbG9naWMgU29DIGRyaXZlcnMKIwojIGVuZCBvZiBBbWxvZ2ljIFNvQyBkcml2
ZXJzCgojCiMgQnJvYWRjb20gU29DIGRyaXZlcnMKIwojIENPTkZJR19TT0NfQlJDTVNUQiBpcyBu
b3Qgc2V0CiMgZW5kIG9mIEJyb2FkY29tIFNvQyBkcml2ZXJzCgojCiMgTlhQL0ZyZWVzY2FsZSBR
b3JJUSBTb0MgZHJpdmVycwojCiMgQ09ORklHX1FVSUNDX0VOR0lORSBpcyBub3Qgc2V0CiMgZW5k
IG9mIE5YUC9GcmVlc2NhbGUgUW9ySVEgU29DIGRyaXZlcnMKCiMKIyBpLk1YIFNvQyBkcml2ZXJz
CiMKIyBlbmQgb2YgaS5NWCBTb0MgZHJpdmVycwoKIwojIEVuYWJsZSBMaXRlWCBTb0MgQnVpbGRl
ciBzcGVjaWZpYyBkcml2ZXJzCiMKIyBDT05GSUdfTElURVhfU09DX0NPTlRST0xMRVIgaXMgbm90
IHNldAojIGVuZCBvZiBFbmFibGUgTGl0ZVggU29DIEJ1aWxkZXIgc3BlY2lmaWMgZHJpdmVycwoK
IwojIFF1YWxjb21tIFNvQyBkcml2ZXJzCiMKIyBlbmQgb2YgUXVhbGNvbW0gU29DIGRyaXZlcnMK
CiMgQ09ORklHX1NPQ19USSBpcyBub3Qgc2V0CgojCiMgWGlsaW54IFNvQyBkcml2ZXJzCiMKIyBD
T05GSUdfWElMSU5YX1ZDVSBpcyBub3Qgc2V0CiMgZW5kIG9mIFhpbGlueCBTb0MgZHJpdmVycwoj
IGVuZCBvZiBTT0MgKFN5c3RlbSBPbiBDaGlwKSBzcGVjaWZpYyBEcml2ZXJzCgojIENPTkZJR19Q
TV9ERVZGUkVRIGlzIG5vdCBzZXQKIyBDT05GSUdfRVhUQ09OIGlzIG5vdCBzZXQKIyBDT05GSUdf
TUVNT1JZIGlzIG5vdCBzZXQKIyBDT05GSUdfSUlPIGlzIG5vdCBzZXQKIyBDT05GSUdfUFdNIGlz
IG5vdCBzZXQKCiMKIyBJUlEgY2hpcCBzdXBwb3J0CiMKQ09ORklHX0lSUUNISVA9eQpDT05GSUdf
QVJNX05WSUM9eQojIENPTkZJR19BTF9GSUMgaXMgbm90IHNldAojIGVuZCBvZiBJUlEgY2hpcCBz
dXBwb3J0CgojIENPTkZJR19JUEFDS19CVVMgaXMgbm90IHNldAojIENPTkZJR19SRVNFVF9DT05U
Uk9MTEVSIGlzIG5vdCBzZXQKCiMKIyBQSFkgU3Vic3lzdGVtCiMKIyBDT05GSUdfR0VORVJJQ19Q
SFkgaXMgbm90IHNldAojIENPTkZJR19CQ01fS09OQV9VU0IyX1BIWSBpcyBub3Qgc2V0CiMgQ09O
RklHX1BIWV9DQURFTkNFX1RPUlJFTlQgaXMgbm90IHNldAojIENPTkZJR19QSFlfQ0FERU5DRV9E
UEhZIGlzIG5vdCBzZXQKIyBDT05GSUdfUEhZX0NBREVOQ0VfU0FMVk8gaXMgbm90IHNldAojIENP
TkZJR19QSFlfRlNMX0lNWDhNUV9VU0IgaXMgbm90IHNldAojIENPTkZJR19QSFlfTUlYRUxfTUlQ
SV9EUEhZIGlzIG5vdCBzZXQKIyBDT05GSUdfUEhZX1BYQV8yOE5NX0hTSUMgaXMgbm90IHNldAoj
IENPTkZJR19QSFlfUFhBXzI4Tk1fVVNCMiBpcyBub3Qgc2V0CiMgZW5kIG9mIFBIWSBTdWJzeXN0
ZW0KCiMgQ09ORklHX1BPV0VSQ0FQIGlzIG5vdCBzZXQKIyBDT05GSUdfTUNCIGlzIG5vdCBzZXQK
IyBDT05GSUdfUkFTIGlzIG5vdCBzZXQKCiMKIyBBbmRyb2lkCiMKIyBDT05GSUdfQU5EUk9JRCBp
cyBub3Qgc2V0CiMgZW5kIG9mIEFuZHJvaWQKCiMgQ09ORklHX0RBWCBpcyBub3Qgc2V0CiMgQ09O
RklHX05WTUVNIGlzIG5vdCBzZXQKCiMKIyBIVyB0cmFjaW5nIHN1cHBvcnQKIwojIENPTkZJR19T
VE0gaXMgbm90IHNldAojIENPTkZJR19JTlRFTF9USCBpcyBub3Qgc2V0CiMgZW5kIG9mIEhXIHRy
YWNpbmcgc3VwcG9ydAoKIyBDT05GSUdfRlBHQSBpcyBub3Qgc2V0CiMgQ09ORklHX0ZTSSBpcyBu
b3Qgc2V0CiMgQ09ORklHX1NJT1ggaXMgbm90IHNldAojIENPTkZJR19TTElNQlVTIGlzIG5vdCBz
ZXQKIyBDT05GSUdfSU5URVJDT05ORUNUIGlzIG5vdCBzZXQKIyBDT05GSUdfQ09VTlRFUiBpcyBu
b3Qgc2V0CiMgZW5kIG9mIERldmljZSBEcml2ZXJzCgojCiMgRmlsZSBzeXN0ZW1zCiMKIyBDT05G
SUdfVkFMSURBVEVfRlNfUEFSU0VSIGlzIG5vdCBzZXQKIyBDT05GSUdfRVhQT1JURlNfQkxPQ0tf
T1BTIGlzIG5vdCBzZXQKIyBDT05GSUdfRklMRV9MT0NLSU5HIGlzIG5vdCBzZXQKIyBDT05GSUdf
RlNfRU5DUllQVElPTiBpcyBub3Qgc2V0CiMgQ09ORklHX0ZTX1ZFUklUWSBpcyBub3Qgc2V0CiMg
Q09ORklHX0ROT1RJRlkgaXMgbm90IHNldAojIENPTkZJR19JTk9USUZZX1VTRVIgaXMgbm90IHNl
dAojIENPTkZJR19GQU5PVElGWSBpcyBub3Qgc2V0CiMgQ09ORklHX1FVT1RBIGlzIG5vdCBzZXQK
IyBDT05GSUdfQVVUT0ZTNF9GUyBpcyBub3Qgc2V0CiMgQ09ORklHX0FVVE9GU19GUyBpcyBub3Qg
c2V0CiMgQ09ORklHX0ZVU0VfRlMgaXMgbm90IHNldAojIENPTkZJR19PVkVSTEFZX0ZTIGlzIG5v
dCBzZXQKCiMKIyBDYWNoZXMKIwojIENPTkZJR19ORVRGU19TVVBQT1JUIGlzIG5vdCBzZXQKIyBD
T05GSUdfRlNDQUNIRSBpcyBub3Qgc2V0CiMgZW5kIG9mIENhY2hlcwoKIwojIFBzZXVkbyBmaWxl
c3lzdGVtcwojCiMgQ09ORklHX1BST0NfRlMgaXMgbm90IHNldAojIENPTkZJR19QUk9DX0NISUxE
UkVOIGlzIG5vdCBzZXQKIyBDT05GSUdfU1lTRlMgaXMgbm90IHNldAojIENPTkZJR19DT05GSUdG
U19GUyBpcyBub3Qgc2V0CiMgZW5kIG9mIFBzZXVkbyBmaWxlc3lzdGVtcwoKIyBDT05GSUdfTUlT
Q19GSUxFU1lTVEVNUyBpcyBub3Qgc2V0CiMgQ09ORklHX05MUyBpcyBub3Qgc2V0CiMgQ09ORklH
X1VOSUNPREUgaXMgbm90IHNldAojIGVuZCBvZiBGaWxlIHN5c3RlbXMKCiMKIyBTZWN1cml0eSBv
cHRpb25zCiMKIyBDT05GSUdfS0VZUyBpcyBub3Qgc2V0CiMgQ09ORklHX1NFQ1VSSVRZX0RNRVNH
X1JFU1RSSUNUIGlzIG5vdCBzZXQKIyBDT05GSUdfU0VDVVJJVFlGUyBpcyBub3Qgc2V0CiMgQ09O
RklHX0ZPUlRJRllfU09VUkNFIGlzIG5vdCBzZXQKIyBDT05GSUdfU1RBVElDX1VTRVJNT0RFSEVM
UEVSIGlzIG5vdCBzZXQKQ09ORklHX0RFRkFVTFRfU0VDVVJJVFlfREFDPXkKQ09ORklHX0xTTT0i
bG9ja2Rvd24seWFtYSxsb2FkcGluLHNhZmVzZXRpZCxpbnRlZ3JpdHksYnBmIgoKIwojIEtlcm5l
bCBoYXJkZW5pbmcgb3B0aW9ucwojCgojCiMgTWVtb3J5IGluaXRpYWxpemF0aW9uCiMKQ09ORklH
X0lOSVRfU1RBQ0tfTk9ORT15CiMgQ09ORklHX0lOSVRfT05fQUxMT0NfREVGQVVMVF9PTiBpcyBu
b3Qgc2V0CiMgQ09ORklHX0lOSVRfT05fRlJFRV9ERUZBVUxUX09OIGlzIG5vdCBzZXQKIyBlbmQg
b2YgTWVtb3J5IGluaXRpYWxpemF0aW9uCiMgZW5kIG9mIEtlcm5lbCBoYXJkZW5pbmcgb3B0aW9u
cwojIGVuZCBvZiBTZWN1cml0eSBvcHRpb25zCgojIENPTkZJR19DUllQVE8gaXMgbm90IHNldAoK
IwojIExpYnJhcnkgcm91dGluZXMKIwojIENPTkZJR19QQUNLSU5HIGlzIG5vdCBzZXQKQ09ORklH
X0JJVFJFVkVSU0U9eQpDT05GSUdfSEFWRV9BUkNIX0JJVFJFVkVSU0U9eQpDT05GSUdfR0VORVJJ
Q19TVFJOQ1BZX0ZST01fVVNFUj15CkNPTkZJR19HRU5FUklDX1NUUk5MRU5fVVNFUj15CiMgQ09O
RklHX0NPUkRJQyBpcyBub3Qgc2V0CiMgQ09ORklHX1BSSU1FX05VTUJFUlMgaXMgbm90IHNldApD
T05GSUdfUkFUSU9OQUw9eQpDT05GSUdfR0VORVJJQ19QQ0lfSU9NQVA9eQpDT05GSUdfQVJDSF9V
U0VfQ01QWENIR19MT0NLUkVGPXkKIyBDT05GSUdfQ1JDX0NDSVRUIGlzIG5vdCBzZXQKIyBDT05G
SUdfQ1JDMTYgaXMgbm90IHNldAojIENPTkZJR19DUkNfVDEwRElGIGlzIG5vdCBzZXQKIyBDT05G
SUdfQ1JDX0lUVV9UIGlzIG5vdCBzZXQKQ09ORklHX0NSQzMyPXkKIyBDT05GSUdfQ1JDMzJfU0VM
RlRFU1QgaXMgbm90IHNldApDT05GSUdfQ1JDMzJfU0xJQ0VCWTg9eQojIENPTkZJR19DUkMzMl9T
TElDRUJZNCBpcyBub3Qgc2V0CiMgQ09ORklHX0NSQzMyX1NBUldBVEUgaXMgbm90IHNldAojIENP
TkZJR19DUkMzMl9CSVQgaXMgbm90IHNldAojIENPTkZJR19DUkM2NCBpcyBub3Qgc2V0CiMgQ09O
RklHX0NSQzQgaXMgbm90IHNldAojIENPTkZJR19DUkM3IGlzIG5vdCBzZXQKIyBDT05GSUdfTElC
Q1JDMzJDIGlzIG5vdCBzZXQKIyBDT05GSUdfQ1JDOCBpcyBub3Qgc2V0CiMgQ09ORklHX1JBTkRP
TTMyX1NFTEZURVNUIGlzIG5vdCBzZXQKIyBDT05GSUdfWFpfREVDIGlzIG5vdCBzZXQKQ09ORklH
X0dFTkVSSUNfQUxMT0NBVE9SPXkKQ09ORklHX0hBU19JT01FTT15CkNPTkZJR19IQVNfRE1BPXkK
Q09ORklHX0RNQV9PUFM9eQpDT05GSUdfTkVFRF9ETUFfTUFQX1NUQVRFPXkKQ09ORklHX0FSQ0hf
SEFTX0RNQV9XUklURV9DT01CSU5FPXkKQ09ORklHX0RNQV9ERUNMQVJFX0NPSEVSRU5UPXkKQ09O
RklHX0FSQ0hfSEFTX1NFVFVQX0RNQV9PUFM9eQpDT05GSUdfRE1BX05PTkNPSEVSRU5UX01NQVA9
eQojIENPTkZJR19ETUFfQVBJX0RFQlVHIGlzIG5vdCBzZXQKQ09ORklHX0dFTkVSSUNfQVRPTUlD
NjQ9eQojIENPTkZJR19JUlFfUE9MTCBpcyBub3Qgc2V0CkNPTkZJR19MSUJGRFQ9eQpDT05GSUdf
QVJDSF9OT19TR19DSEFJTj15CiMgQ09ORklHX1NUUklOR19TRUxGVEVTVCBpcyBub3Qgc2V0CiMg
ZW5kIG9mIExpYnJhcnkgcm91dGluZXMKCkNPTkZJR19HRU5FUklDX0xJQl9ERVZNRU1fSVNfQUxM
T1dFRD15CgojCiMgS2VybmVsIGhhY2tpbmcKIwoKIwojIHByaW50ayBhbmQgZG1lc2cgb3B0aW9u
cwojCkNPTkZJR19DT05TT0xFX0xPR0xFVkVMX0RFRkFVTFQ9NwpDT05GSUdfQ09OU09MRV9MT0dM
RVZFTF9RVUlFVD00CkNPTkZJR19NRVNTQUdFX0xPR0xFVkVMX0RFRkFVTFQ9NAojIENPTkZJR19T
WU1CT0xJQ19FUlJOQU1FIGlzIG5vdCBzZXQKIyBlbmQgb2YgcHJpbnRrIGFuZCBkbWVzZyBvcHRp
b25zCgojCiMgQ29tcGlsZS10aW1lIGNoZWNrcyBhbmQgY29tcGlsZXIgb3B0aW9ucwojCiMgQ09O
RklHX0RFQlVHX0lORk8gaXMgbm90IHNldApDT05GSUdfRlJBTUVfV0FSTj0xMDI0CiMgQ09ORklH
X1NUUklQX0FTTV9TWU1TIGlzIG5vdCBzZXQKIyBDT05GSUdfUkVBREFCTEVfQVNNIGlzIG5vdCBz
ZXQKIyBDT05GSUdfSEVBREVSU19JTlNUQUxMIGlzIG5vdCBzZXQKIyBDT05GSUdfREVCVUdfU0VD
VElPTl9NSVNNQVRDSCBpcyBub3Qgc2V0CiMgQ09ORklHX1NFQ1RJT05fTUlTTUFUQ0hfV0FSTl9P
TkxZIGlzIG5vdCBzZXQKIyBDT05GSUdfREVCVUdfRk9SQ0VfRlVOQ1RJT05fQUxJR05fMzJCIGlz
IG5vdCBzZXQKIyBDT05GSUdfREVCVUdfRk9SQ0VfV0VBS19QRVJfQ1BVIGlzIG5vdCBzZXQKIyBl
bmQgb2YgQ29tcGlsZS10aW1lIGNoZWNrcyBhbmQgY29tcGlsZXIgb3B0aW9ucwoKIwojIEdlbmVy
aWMgS2VybmVsIERlYnVnZ2luZyBJbnN0cnVtZW50cwojCiMgQ09ORklHX01BR0lDX1NZU1JRIGlz
IG5vdCBzZXQKIyBDT05GSUdfREVCVUdfRlMgaXMgbm90IHNldAojIENPTkZJR19VQlNBTiBpcyBu
b3Qgc2V0CiMgZW5kIG9mIEdlbmVyaWMgS2VybmVsIERlYnVnZ2luZyBJbnN0cnVtZW50cwoKQ09O
RklHX0RFQlVHX0tFUk5FTD15CiMgQ09ORklHX0RFQlVHX01JU0MgaXMgbm90IHNldAoKIwojIE1l
bW9yeSBEZWJ1Z2dpbmcKIwojIENPTkZJR19QQUdFX0VYVEVOU0lPTiBpcyBub3Qgc2V0CiMgQ09O
RklHX0RFQlVHX1BBR0VBTExPQyBpcyBub3Qgc2V0CiMgQ09ORklHX1BBR0VfT1dORVIgaXMgbm90
IHNldAojIENPTkZJR19QQUdFX1BPSVNPTklORyBpcyBub3Qgc2V0CiMgQ09ORklHX0RFQlVHX09C
SkVDVFMgaXMgbm90IHNldApDT05GSUdfSEFWRV9ERUJVR19LTUVNTEVBSz15CiMgQ09ORklHX0RF
QlVHX0tNRU1MRUFLIGlzIG5vdCBzZXQKIyBDT05GSUdfREVCVUdfU1RBQ0tfVVNBR0UgaXMgbm90
IHNldAojIENPTkZJR19TQ0hFRF9TVEFDS19FTkRfQ0hFQ0sgaXMgbm90IHNldAojIENPTkZJR19E
RUJVR19WTSBpcyBub3Qgc2V0CiMgQ09ORklHX0RFQlVHX05PTU1VX1JFR0lPTlMgaXMgbm90IHNl
dAojIENPTkZJR19ERUJVR19NRU1PUllfSU5JVCBpcyBub3Qgc2V0CkNPTkZJR19DQ19IQVNfS0FT
QU5fR0VORVJJQz15CkNPTkZJR19DQ19IQVNfV09SS0lOR19OT1NBTklUSVpFX0FERFJFU1M9eQoj
IGVuZCBvZiBNZW1vcnkgRGVidWdnaW5nCgojIENPTkZJR19ERUJVR19TSElSUSBpcyBub3Qgc2V0
CgojCiMgRGVidWcgT29wcywgTG9ja3VwcyBhbmQgSGFuZ3MKIwojIENPTkZJR19QQU5JQ19PTl9P
T1BTIGlzIG5vdCBzZXQKQ09ORklHX1BBTklDX09OX09PUFNfVkFMVUU9MApDT05GSUdfUEFOSUNf
VElNRU9VVD0wCiMgQ09ORklHX1NPRlRMT0NLVVBfREVURUNUT1IgaXMgbm90IHNldAojIENPTkZJ
R19ERVRFQ1RfSFVOR19UQVNLIGlzIG5vdCBzZXQKIyBDT05GSUdfV1FfV0FUQ0hET0cgaXMgbm90
IHNldAojIGVuZCBvZiBEZWJ1ZyBPb3BzLCBMb2NrdXBzIGFuZCBIYW5ncwoKIwojIFNjaGVkdWxl
ciBEZWJ1Z2dpbmcKIwojIGVuZCBvZiBTY2hlZHVsZXIgRGVidWdnaW5nCgojIENPTkZJR19ERUJV
R19USU1FS0VFUElORyBpcyBub3Qgc2V0CgojCiMgTG9jayBEZWJ1Z2dpbmcgKHNwaW5sb2Nrcywg
bXV0ZXhlcywgZXRjLi4uKQojCiMgQ09ORklHX0RFQlVHX1NQSU5MT0NLIGlzIG5vdCBzZXQKIyBD
T05GSUdfREVCVUdfTVVURVhFUyBpcyBub3Qgc2V0CiMgQ09ORklHX0RFQlVHX1JXU0VNUyBpcyBu
b3Qgc2V0CiMgQ09ORklHX0RFQlVHX0FUT01JQ19TTEVFUCBpcyBub3Qgc2V0CiMgQ09ORklHX0RF
QlVHX0xPQ0tJTkdfQVBJX1NFTEZURVNUUyBpcyBub3Qgc2V0CiMgQ09ORklHX0xPQ0tfVE9SVFVS
RV9URVNUIGlzIG5vdCBzZXQKIyBDT05GSUdfV1dfTVVURVhfU0VMRlRFU1QgaXMgbm90IHNldAoj
IENPTkZJR19TQ0ZfVE9SVFVSRV9URVNUIGlzIG5vdCBzZXQKIyBlbmQgb2YgTG9jayBEZWJ1Z2dp
bmcgKHNwaW5sb2NrcywgbXV0ZXhlcywgZXRjLi4uKQoKIyBDT05GSUdfREVCVUdfSVJRRkxBR1Mg
aXMgbm90IHNldAojIENPTkZJR19TVEFDS1RSQUNFIGlzIG5vdCBzZXQKIyBDT05GSUdfV0FSTl9B
TExfVU5TRUVERURfUkFORE9NIGlzIG5vdCBzZXQKIyBDT05GSUdfREVCVUdfS09CSkVDVCBpcyBu
b3Qgc2V0CgojCiMgRGVidWcga2VybmVsIGRhdGEgc3RydWN0dXJlcwojCiMgQ09ORklHX0RFQlVH
X0xJU1QgaXMgbm90IHNldAojIENPTkZJR19ERUJVR19QTElTVCBpcyBub3Qgc2V0CiMgQ09ORklH
X0RFQlVHX1NHIGlzIG5vdCBzZXQKIyBDT05GSUdfREVCVUdfTk9USUZJRVJTIGlzIG5vdCBzZXQK
IyBDT05GSUdfQlVHX09OX0RBVEFfQ09SUlVQVElPTiBpcyBub3Qgc2V0CiMgZW5kIG9mIERlYnVn
IGtlcm5lbCBkYXRhIHN0cnVjdHVyZXMKCiMgQ09ORklHX0RFQlVHX0NSRURFTlRJQUxTIGlzIG5v
dCBzZXQKCiMKIyBSQ1UgRGVidWdnaW5nCiMKIyBDT05GSUdfUkNVX1NDQUxFX1RFU1QgaXMgbm90
IHNldAojIENPTkZJR19SQ1VfVE9SVFVSRV9URVNUIGlzIG5vdCBzZXQKIyBDT05GSUdfUkNVX1JF
Rl9TQ0FMRV9URVNUIGlzIG5vdCBzZXQKIyBDT05GSUdfUkNVX1RSQUNFIGlzIG5vdCBzZXQKIyBD
T05GSUdfUkNVX0VRU19ERUJVRyBpcyBub3Qgc2V0CiMgZW5kIG9mIFJDVSBEZWJ1Z2dpbmcKCiMg
Q09ORklHX0RFQlVHX1dRX0ZPUkNFX1JSX0NQVSBpcyBub3Qgc2V0CkNPTkZJR19IQVZFX0ZVTkNU
SU9OX1RSQUNFUj15CkNPTkZJR19IQVZFX0ZUUkFDRV9NQ09VTlRfUkVDT1JEPXkKQ09ORklHX0hB
VkVfU1lTQ0FMTF9UUkFDRVBPSU5UUz15CkNPTkZJR19IQVZFX0NfUkVDT1JETUNPVU5UPXkKIyBD
T05GSUdfU0FNUExFUyBpcyBub3Qgc2V0CgojCiMgYXJtIERlYnVnZ2luZwojCiMgQ09ORklHX0RF
QlVHX0FJRF9GT1JfU1laQk9UIGlzIG5vdCBzZXQKQ09ORklHX1VOV0lOREVSX0FSTT15CkNPTkZJ
R19BUk1fVU5XSU5EPXkKIyBDT05GSUdfREVCVUdfVVNFUiBpcyBub3Qgc2V0CiMgQ09ORklHX0RF
QlVHX0xMIGlzIG5vdCBzZXQKQ09ORklHX0RFQlVHX0xMX0lOQ0xVREU9Im1hY2gvZGVidWctbWFj
cm8uUyIKQ09ORklHX1VOQ09NUFJFU1NfSU5DTFVERT0iZGVidWcvdW5jb21wcmVzcy5oIgojIENP
TkZJR19DT1JFU0lHSFQgaXMgbm90IHNldAojIGVuZCBvZiBhcm0gRGVidWdnaW5nCgojCiMgS2Vy
bmVsIFRlc3RpbmcgYW5kIENvdmVyYWdlCiMKIyBDT05GSUdfS1VOSVQgaXMgbm90IHNldAojIENP
TkZJR19OT1RJRklFUl9FUlJPUl9JTkpFQ1RJT04gaXMgbm90IHNldAojIENPTkZJR19GQVVMVF9J
TkpFQ1RJT04gaXMgbm90IHNldApDT05GSUdfQVJDSF9IQVNfS0NPVj15CkNPTkZJR19DQ19IQVNf
U0FOQ09WX1RSQUNFX1BDPXkKIyBDT05GSUdfS0NPViBpcyBub3Qgc2V0CiMgQ09ORklHX1JVTlRJ
TUVfVEVTVElOR19NRU5VIGlzIG5vdCBzZXQKIyBDT05GSUdfTUVNVEVTVCBpcyBub3Qgc2V0CiMg
ZW5kIG9mIEtlcm5lbCBUZXN0aW5nIGFuZCBDb3ZlcmFnZQojIGVuZCBvZiBLZXJuZWwgaGFja2lu
Zwo=
--000000000000c7820105b9f6a171--
